name: Build & Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch: # Manual rerun

jobs:
  build_and_push:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract version
        id: version
        run: echo ::set-output name=version::$(date +%s)

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: yeboster/todoist-actions
          tags: |
            type=raw,value=${{steps.version.outputs.version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64
          push: true
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Update tag version
        uses: grebois/kube-tools@v1.5.2
        with:
          yq: 4.19.1
          command: |
            echo "Update tag version to ${{ steps.version.outputs.version }}"
            yq -i '.images[0].newTag = "${{ steps.version.outputs.version }}"' k8s/overlays/prod/kustomization.yaml

      - name: Commit latest release version
        run: |
          git config --global user.name 'yeboster'
          git config --global user.email 'bot@yeboster.com'
          git add .
          git commit -m "Update app version to ${{ steps.version.outputs.version }}"
          git push
  deploy:
    needs: build_and_push
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deploy
        run: |
          curl https://receiver.yeboster.com/hook/${{ secrets.WEBHOOK_PATH }}
